<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hellowolrd]]></title>
    <url>%2F2018%2F10%2F05%2Fhellowolrd%2F</url>
    <content type="text"><![CDATA[hello worldhello worldhello worldhello worldhello worldhello worldhello worldhello world]]></content>
  </entry>
  <entry>
    <title></title>
    <url>%2F2018%2F10%2F04%2Fvuejs%E8%B7%AF%E7%94%B1%2F</url>
    <content type="text"><![CDATA[layout: hexotitle: vuejs路由date: 2018-10-04 14:26:35tags: -vue -路由 实现页面跳转的功能。第一步：导入vue.js 和 vue-router 第二步：定义功能组件 第三步：定义一个空组件 第四步：实例化一个路由的对象var newRouter = new newRouter();]]></content>
  </entry>
  <entry>
    <title><![CDATA[vue实现animate动画]]></title>
    <url>%2F2018%2F09%2F29%2Fvue%E5%AE%9E%E7%8E%B0animate%E5%8A%A8%E7%94%BB%2F</url>
    <content type="text"><![CDATA[在vue中使用animate库快速建立动画效果animate.css下载地址，该地址提供各种样式的演示效果。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;css/animate.css&quot;&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/vue1.0.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;button @click=&quot;toggle&quot;&gt;显示和隐藏&lt;/button&gt;&lt;br/&gt; &lt;div v-show=&quot;isShow&quot; class=&quot;animated&quot; transition=&quot;show&quot;&gt;hello vue&lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;script type=&quot;text/javascript&quot;&gt; new Vue(&#123; el: &apos;#app&apos;, data: &#123; isShow: false &#125;, methods: &#123; toggle: function()&#123; this.isShow = !this.isShow; &#125; &#125;, transitions: &#123; &apos;show&apos;:&#123; enterClass:&apos;bounceInLeft&apos;, ** leaveClass:&apos;bounceOutLeft&apos; ** &#125; &#125; &#125;)&lt;/script&gt;&lt;/html&gt;]]></content>
      <tags>
        <tag>-anmimate.css -vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue_ajax获取、增加、删除操作（与服务器的交互）]]></title>
    <url>%2F2018%2F09%2F28%2Fvue-ajax%E8%8E%B7%E5%8F%96%E3%80%81%E5%A2%9E%E5%8A%A0%E3%80%81%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%EF%BC%88%E4%B8%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%BA%A4%E4%BA%92%EF%BC%89%2F</url>
    <content type="text"><![CDATA[123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;vue_ajax 获取、增加、删除操作（与服务器的交互）&lt;/title&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/vue1.0.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/resource.js&quot;&gt;&lt;/script&gt; &lt;style&gt; #tab &#123; width: 800px; border-collapse: collapse; margin: 20px auto; &#125; th &#123; background: #0094ff; color: #fff; text-align: center; padding: 5px; border: 1px solid #333; &#125; td &#123; text-align: center; padding: 5px; border: 1px solid #333; &#125; .add &#123; padding-left: 20%; padding-top: 20px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;div class=&quot;add&quot;&gt; 编号：&lt;input type=&quot;text&quot; v-model=&quot;id&quot; v-focus /&gt; 品牌：&lt;input type=&quot;text&quot; v-model=&quot;pname&quot; /&gt; &lt;button @click=&quot;addData&quot;&gt;添加品牌&lt;/button&gt; 搜索：&lt;input type=&quot;text&quot; placeholder=&quot;请输入筛选内容&quot; v-model=&quot;sname&quot; /&gt; &lt;/div&gt; &lt;table id=&quot;tab&quot;&gt; &lt;tr&gt; &lt;th&gt;编号&lt;/th&gt; &lt;th&gt;名称&lt;/th&gt; &lt;th&gt;创建时间&lt;/th&gt; &lt;th&gt;操作&lt;/th&gt; &lt;/tr&gt; &lt;tr v-if=&quot;list.length == 0&quot;&gt;&lt;!-- v-if条件若为true的话，则不显示当前 在list中没有数据的时候则会显示当前 --&gt; &lt;td colspan=&quot;4&quot;&gt;当前列表无数据&lt;/td&gt; &lt;/tr&gt; &lt;tr v-for=&quot;(index,item) in list&quot; v-color=&quot;color&quot;&gt; &lt;!-- v-for调用list中数据加载函数 --&gt; &lt;td&gt;&#123;&#123;item.id&#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123;item.name&#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123;item.ctime&#125;&#125;&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;javascript:void(0)&quot; @click=&quot;delData(tiem.id)&quot;&gt;删除&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt; &lt;script&gt; new Vue(&#123; el: &apos;#app&apos;, data:&#123; list: [ ], pname:&apos;&apos; &#125;, created: function()&#123; this.getlist(); &#125;,//vm加载完实例后自动运行定义的函数 methods: &#123; getlist: function()&#123; this.$http.get(&apos;url&apos;).then(function(response)&#123; if(response.body.status != 0)&#123; alert(response.body.message); return;//处理服务器异常信息 &#125; this.list = response.body.message; &#125; &#125;, addData:function()&#123; this.$http.post(&apos;url&apos;,&#123;name:this.pname&#125;,&#123;emulateJSON:true&#125;).then(function(response)&#123; if(rensponse.body.status != 0)&#123; alert(response.body.messeage); return; &#125; this.pname = &apos;&apos;;//清除文本框的数据 this.getlist();//将数据列表重新加载出来 &#125; &#125;, delData:function(id)&#123; var url = &apos;www&apos;; this.$http.get(url+id).then(function(response)&#123; if (response.body.status != 0) &#123; alert(response.body.messeage); return; &#125; this.getlist();//刷新 &#125;) &#125; &#125;) &lt;/script&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>服务器交互</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue实现ajax请求]]></title>
    <url>%2F2018%2F09%2F28%2Fvue%E5%AE%9E%E7%8E%B0ajax%E8%AF%B7%E6%B1%82%2F</url>
    <content type="text"><![CDATA[浏览器提起服务器数据需要遵循http协议，相当规范统一的语言信息。 post请求get请求 浏览器要遵循 请求报文格式将数据发送到服务器 服务器向浏览器请求数据的时候要遵循响应报文数据格式 1)ajax_get请求12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/vue1.0.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/resource.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;!-- 返回数据 json过滤器 --&gt; &#123;&#123; obj | json &#125;&#125; &lt;button @click=&quot;getData&quot;&gt;get请求&lt;/button&gt; &lt;/div&gt; &lt;/body&gt;&lt;script&gt; new Vue(&#123; el: &apos;#app&apos;, data: &#123; obj: null &#125;, methods: &#123; getData:function()&#123; // 请求的url var url = &apos;http://www.baidu.api&apos; // 利用vue-resource发出ajax的get请求 this.$http.get(url).then(function(response)&#123; // 发出请求 this.obj = response.body;//获取服务器响应回来的数据 &#125;) &#125; &#125; &#125;)&lt;/script&gt;&lt;/html&gt; 1)ajax_post请求123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/vue1.0.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/resource.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;!-- 返回数据 json过滤器 --&gt; &#123;&#123; obj | json &#125;&#125; &lt;button @click=&quot;postData&quot;&gt;post请求&lt;/button&gt; &lt;/div&gt; &lt;/body&gt;&lt;script&gt; new Vue(&#123; el: &apos;#app&apos;, data: &#123; obj: null &#125;, methods: &#123; postData:function()&#123; // 请求的url var url = &apos;http://www.baidu.api&apos; // 利用vue-resource发出ajax的post请求 this.$http.post(url,&#123;name=&apos;大老虎&apos;&#125;，&#123;emulateJSON:true&#125;).then(function(response)&#123;//返回数据 alert(reponse.body.message); &#125;) &#125; &#125; &#125;)&lt;/script&gt;&lt;/html&gt; 1)ajax_jsonp请求 //请求返回的是src=’’中的数据123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&lt;!-- 浏览器的跨域请求jsonp请求的是src脚本请求到src =&apos;http://...&apos; --&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/vue1.0.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/resource.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;!-- 返回数据 json过滤器 --&gt; &#123;&#123;obj | json &#125;&#125; &lt;button @click=&quot;postJsonp&quot;&gt;post请求&lt;/button&gt; &lt;/div&gt; &lt;/body&gt;&lt;script&gt; new Vue(&#123; el: &apos;#app&apos;, data: &#123; obj: null &#125;, methods: &#123; postJsonp:function()&#123; // 请求的url var url = &apos;http://www.baidu.api&apos;; // 利用vue-resource发出ajax的jsonp实现跨域请求数据 this.$http.jsonp(url).then(function(response)&#123;//返回数据 this.obj = response.body; &#125;) &#125; &#125; &#125;)&lt;/script&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>vue ajax</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>AJAX</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端性能优化基本方法]]></title>
    <url>%2F2018%2F09%2F28%2F%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%9F%BA%E6%9C%AC%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[前端性能优化的几种方法：1) HTML部分 -语义化HTML：好处在于可以使代码简洁清晰，支持不同设备，利于搜索引擎，便于团队开发；-减少DOM节点：加速页面渲染；-给图片加上正确的宽高值：这可以减少页面重绘，同时防止图片缩放；-防止src属性和link的href属性为空：当值为空时，浏览器很可能会把当前页面当成其属性值加载；-正确的闭合标签：如避免使用，浏览器会多一个将它解析成&lt;div>&lt;/div>的过程；-链接为目录或首页的地址后面加”/”，如http://www.vue.org/；-用LINK而不用@import方式导入样式；-样式放在页头，JS放在页尾；-缩小favicon.ico并缓存； 2)CSS部分-避免使用CSS Expressions(CSS表达式)：如background-color: expression( (newDate()).getHours()%2 ? “#B8D4FF” : “#F08A00″ ) ;-避免使用CSS Filter（CSS滤镜）；u 使用CSS缩写，减少代码量；-通过CSSSprites把同类图片合成一张，减少图片请求；-减少查询层级：如.header .logo要好过.header .top .logo；-减少查询范围：如.header&gt;li要好过.header li；-避免TAG标签与CLASS或ID并存：如a.top、button#submit；-删除重复的CSS； 3)Javscript部分-尽量少用全局变量；-使用事件代理绑定事件，如将事件绑定在body上进行代理；-避免频繁操作DOM节点；-不使用EVAL；-减少对象查找，如a.b.c.d这种查找方式非常耗性能，尽可能把它定义在变量里；-类型转换：把数字转换成字符串使用”” + 1，浮点数转换成整型使用Math.floor()或者Math.round()；-对字符串进行循环操作，譬如替换、查找，应使用正则表达式；-删除重复的JS； 4)服务器部分-尽量合并CSS、JS文件，或将其直接写在页面上，减少HTTP请求；-压缩CSS、JS文件，缩短文件传输时间；-避免404错误：特别要避免给404指定一个停摆页面，否则所有404错误都将会加载一次页面；-一般要求减少DNS查询次数，如同一个页面的请求资源尽量少的使用不同的主机名，这可以减少网站并行下载的数量，但很多网站为了加速下载资源其实是特意用了多个主机名，这里要做一个权衡；-使用CDN加速，使用户从离自己最近的服务器下载文件；-减少Cookie的大小，使用无cookie的域，客户端请求静态文件的时候，减少 Cookie 的反复传输对主域名的影响；-为文件头指定Expires，使内容具有缓存性；-使用gzip压缩内容；]]></content>
      <categories>
        <category>前端性能优化</category>
      </categories>
      <tags>
        <tag>-前端性能优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vue自定义局部过滤器、全局过滤器，自定义属性命令自定义元素标签]]></title>
    <url>%2F2018%2F09%2F28%2Fvue%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%80%E9%83%A8%E8%BF%87%E6%BB%A4%E5%99%A8%E3%80%81%E5%85%A8%E5%B1%80%E8%BF%87%E6%BB%A4%E5%99%A8%EF%BC%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7%E5%91%BD%E4%BB%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%83%E7%B4%A0%E6%A0%87%E7%AD%BE%2F</url>
    <content type="text"><![CDATA[123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;VUE1.0.JS-列表实现数据添加、删除、筛选&lt;/title&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/vue1.0.js&quot;&gt;&lt;/script&gt; &lt;style&gt; #tab &#123; width: 800px; border-collapse: collapse; margin: 20px auto; &#125; th &#123; background: #0094ff; color: #fff; text-align: center; padding: 5px; border: 1px solid #333; &#125; td &#123; text-align: center; padding: 5px; border: 1px solid #333; &#125; .add &#123; padding-left: 20%; padding-top: 20px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;div class=&quot;add&quot;&gt; 编号：&lt;input type=&quot;text&quot; v-model=&quot;id&quot; v-focus /&gt; 品牌：&lt;input type=&quot;text&quot; v-model=&quot;pname&quot; @keydown.f2=&quot;addData&quot; /&gt;&lt;!-- 键盘指令 --&gt; &lt;button @click=&quot;addData&quot;&gt;添加品牌&lt;/button&gt; &lt;my-red&gt;搜索：&lt;/my-red&gt;&lt;input type=&quot;text&quot; placeholder=&quot;请输入筛选内容&quot; v-model=&quot;sname&quot; /&gt; &lt;/div&gt; &lt;table id=&quot;tab&quot;&gt; &lt;tr&gt; &lt;th&gt;编号&lt;/th&gt; &lt;th&gt;名称&lt;/th&gt; &lt;th&gt;创建时间&lt;/th&gt; &lt;th&gt;操作&lt;/th&gt; &lt;/tr&gt; &lt;tr v-if=&quot;list.length == 0&quot;&gt;&lt;!-- v-if条件若为true的话，则不显示当前 在list中没有数据的时候则会显示当前 --&gt; &lt;td colspan=&quot;4&quot;&gt;当前列表无数据&lt;/td&gt; &lt;/tr&gt; &lt;tr v-for=&quot;(index,item) in list&quot; v-color=&quot;color&quot;&gt; &lt;!-- v-for调用list中数据加载函数 --&gt; &lt;td&gt;&#123;&#123;item.id&#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123;item.name&#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123;item.ctime | datefmt( &apos;yyyy-mm-dd&apos; )&#125;&#125;&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;javascript:void(0)&quot; @click=&quot;delData&quot;&gt;删除&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt; &lt;script&gt; //定义属性指令 // 定义v-focus不需要加v-前缀 定义指令 页面加载后 直接聚焦文本框 Vue.directive(&apos;focus&apos;,function()&#123; var inputobject = this.el; inputobject.focus(); &#125;) //定义指令 修改文本的颜色值 Vue.directive(&apos;color&apos;,function()&#123; this.el.style.color = this.vm[ this.expression] &#125;) //定义元素属性 &lt;red&gt;搜索&lt;red&gt; Vue.elementDirective(&apos;my-red&apos;,&#123; bind:function()&#123; this.el.style.color = &apos;red&apos;; &#125; &#125;) Vue.config.keyCodes = 113; console.log(Vue.config.keyCodes); Vue.filter(&apos;datefmt&apos;,function(input,formatstring) &#123; var res = &apos;&apos;; var year = input.getFullYear(); var month = input.getMonth() + 1;//得到的是月份的索引值，从0开始的，所以输出加1 var day = input.getDay(); if ( formatstring == &apos;yyyy-mm-dd&apos;) &#123; res = year + &apos;-&apos; + month + &apos;-&apos; + day; return res; &#125;else &#123; res = year + &apos;-&apos; + month + &apos;-&apos; + day + &apos; 03:09:18&apos;; return res; &#125; &#125;); new Vue(&#123; el: &apos;#app&apos;, data: &#123; color: &apos;red&apos;, list: [ &#123;id: 1,name: &apos;奔驰&apos;,ctime: new Date()&#125;, &#123;id: 2,name: &apos;宝马&apos;,ctime: new Date()&#125;, &#123;id: 3,name: &apos;奥迪&apos;,ctime: new Date()&#125;, // .... ], id: &apos;&apos;, pname: &apos;&apos;, // 点击按钮，push提交数据 sname:&apos;&apos;, &#125;, methods: &#123; addData: function()&#123; // 包装成list要求的对象 var p =&#123;id: this.id,name: this.pname,ctime: new Date()&#125;; if (!(this.id == &quot;&quot;|| this.pname == &quot;&quot;)) &#123; // 判断语句，如果输入的是空，则不添加 this.list.push(p); this.id =&apos;&apos;; this.pname = &apos;&apos;; &#125; // 清空value值 &#125;, delData: function()&#123; // 在head中定义index索引值，在delData中直接定义函数 // list.splice(删除的索引，删除的个数) var index = this.index; this.list.splice(index,1); &#125;, &#125; &#125;); &lt;/script&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>-vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VUE1.0.JS-列表实现数据添加、删除、筛选]]></title>
    <url>%2F2018%2F09%2F25%2FVUE1-0-JS-%E5%88%97%E8%A1%A8%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E6%B7%BB%E5%8A%A0%E3%80%81%E5%88%A0%E9%99%A4%E3%80%81%E7%AD%9B%E9%80%89%2F</url>
    <content type="text"><![CDATA[(1)列表添加思路：给按钮添加数据12345678v-model@click=&quot;addData&quot; methods:&#123; addData: function()&#123; //push函数添加 //清空文本&#125;&#125; (2)列表删除思路：(index,item) in list给list同时添加索引值，list.splice(index,1)删除该索引值的数值; (3)列表筛选思路：v-for=&quot;(index,item) in list | filterBy sname in &#39;name&#39;&quot; 代码案例如下123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;VUE1.0.JS-列表实现数据添加、删除、筛选&lt;/title&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/vue1.0.js&quot;&gt;&lt;/script&gt; &lt;style&gt; #tab &#123; width: 800px; border-collapse: collapse; margin: 20px auto; &#125; th &#123; background: #0094ff; color: #fff; text-align: center; padding: 5px; border: 1px solid #333; &#125; td &#123; text-align: center; padding: 5px; border: 1px solid #333; &#125; .add &#123; padding-left: 20%; padding-top: 20px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;div class=&quot;add&quot;&gt; 编号：&lt;input type=&quot;text&quot; v-model=&quot;id&quot; /&gt; 品牌：&lt;input type=&quot;text&quot; v-model=&quot;pname&quot; /&gt; &lt;button @click=&quot;addData&quot;&gt;添加品牌&lt;/button&gt; 搜索：&lt;input type=&quot;text&quot; placeholder=&quot;请输入筛选内容&quot; v-model=&quot;sname&quot; /&gt; &lt;/div&gt; &lt;table id=&quot;tab&quot;&gt; &lt;tr&gt; &lt;th&gt;编号&lt;/th&gt; &lt;th&gt;名称&lt;/th&gt; &lt;th&gt;创建时间&lt;/th&gt; &lt;th&gt;操作&lt;/th&gt; &lt;/tr&gt; &lt;tr v-if=&quot;list.length == 0&quot;&gt;&lt;!-- v-if条件若为true的话，则不显示当前 在list中没有数据的时候则会显示当前 --&gt; &lt;td colspan=&quot;4&quot;&gt;当前列表无数据&lt;/td&gt; &lt;/tr&gt; &lt;tr v-for=&quot;(index,item) in list | filterBy sname in &apos;name&apos;&quot; &gt; &lt;!-- v-for调用list中数据加载函数 --&gt; &lt;td&gt;&#123;&#123;item.id&#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123;item.name&#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123;item.ctime&#125;&#125;&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;javascript:void(0)&quot; @click=&quot;delData&quot;&gt;删除&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt;&lt;/body&gt; &lt;script&gt; new Vue(&#123; el: &apos;#app&apos;, data: &#123; list: [ &#123;id: 1,name: &apos;奔驰&apos;,ctime: new Date()&#125;, &#123;id: 2,name: &apos;宝马&apos;,ctime: new Date()&#125;, &#123;id: 3,name: &apos;奥迪&apos;,ctime: new Date()&#125;, // .... ], id: &apos;&apos;, pname: &apos;&apos;, // 点击按钮，push提交数据 sname:&apos;&apos;, &#125;, methods: &#123; addData: function()&#123; // 包装成list要求的对象 var p =&#123;id: this.id,name: this.pname,ctime: new Date()&#125;; if (!(this.id == &quot;&quot;|| this.pname == &quot;&quot;)) &#123; // 判断语句，如果输入的是空，则不添加 this.list.push(p); this.id =&apos;&apos;; this.pname = &apos;&apos;; &#125; // 清空value值 &#125;, delData: function()&#123; // 在head中定义index索引值，在delData中直接定义函数 // list.splice(删除的索引，删除的个数) var index = this.index; this.list.splice(index,1); &#125;, &#125; &#125;); &lt;/script&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>-vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[表单验证（自己做一个表单验证）]]></title>
    <url>%2F2018%2F09%2F18%2F%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%EF%BC%88%E8%87%AA%E5%B7%B1%E5%81%9A%E4%B8%80%E4%B8%AA%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%EF%BC%89%2F</url>
    <content type="text"><![CDATA[大多数网站都要应用到表单的验证，自己多动手操作，熟练JS语法和正式法则。 首先html建立一个简单的表单，css加一些样式。 代码如下:1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556html:&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;表单验证&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/index.css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;css/normalize.css&quot;&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/index.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;p&gt;新用户注册&lt;/p&gt; &lt;h3&gt;基本信息&lt;/h3&gt; &lt;hr /&gt; &lt;div class=&quot;content&quot;&gt; &lt;form action=&quot;#&quot; onsubmit=&quot;return checkForm()&quot;&gt; &lt;div class=&quot;formGroup&quot;&gt; &lt;label for=&quot;ueserName&quot;&gt;用户名：&lt;/label&gt; &lt;input type=&quot;text&quot; id=&quot;userName&quot; onblur=&quot;checkUserName()&quot; oninput=&quot;checkUserName()&quot; &gt; &lt;span class=&quot;default&quot; id=&quot;nameErr&quot;&gt;请输入至少三位的用户名&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;formGroup&quot;&gt; &lt;label for=&quot;passWord&quot;&gt;密码：&lt;/label&gt; &lt;input type=&quot;password&quot; id=&quot;passWord&quot; onblur=&quot;checkPassWord()&quot; oninput=&quot;checkPassWord()&quot; &gt; &lt;span class=&quot;default&quot; id=&quot;passwordErr&quot;&gt;请输入4到8位的密码&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;formGroup&quot;&gt; &lt;label for=&quot;conPassWord&quot;&gt;确认密码：&lt;/label&gt; &lt;input type=&quot;password&quot; id=&quot;conPassword&quot; onblur=&quot;checkConpassWord()&quot; oninput=&quot;checkConpassWord()&quot; /&gt; &lt;span class=&quot;default&quot; id=&quot;conPasswordErr&quot;&gt;请再输入一遍密码&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;formGroup&quot;&gt; &lt;label for=&quot;number&quot;&gt;手机号码：&lt;/label&gt; &lt;input type=&quot;text&quot; id=&quot;number&quot; onblur=&quot;checkNumber()&quot; oninput=&quot;checkNumber()&quot; /&gt; &lt;span class=&quot;default&quot; id=&quot;numberErr&quot;&gt;请输入11位手机号码&lt;/span&gt; &lt;/div&gt; &lt;div&gt; &lt;button type=&quot;submit&quot; class=&quot;submit&quot;&gt;注册&lt;/button&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768css:.container &#123; width: 500px; height: 500px; border: 1px solid #807B7B; margin: 100px auto ; border-radius: 10px; background: #F6F3F3;&#125;.container p &#123; width: 450px; height: 25px; line-height: 25px; text-align: center; border-radius: 3px; border: 1px solid #807B7B; margin:10px auto 0; font-weight: bold;&#125;hr &#123; width: 90%;&#125;h3 &#123; font-size: 16px; padding-left: 22px;&#125;.content&#123; margin-top: 20px;&#125;.content label &#123; width: 100px; height: 32px; display: inline-block; text-align: right;&#125;.content span &#123; font-size: 12px;&#125;.content .submit &#123; background: #F3BD59; margin: 0 auto; width: 50px; height: 30px; border-radius: 2px; border: none; margin:20px 180px;&#125;.err &#123; color: red;&#125;.ok &#123; color: blue;&#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131js: function checkForm()&#123; var nametip = checkUserName(); var passwordtip = checkPassWord(); var conpasswordtip = checkConpassWord(); var numbertip = checkNumber(); return nametip &amp;&amp; passwordtip &amp;&amp; conpasswordtip &amp;&amp; numbertip; &#125;//验证名字 function checkUserName()&#123; var username = document.getElementById(&quot;userName&quot;); var nameErr = document.getElementById(&quot;nameErr&quot;); var pattern = /^[a-zA-Z][0-9A-Za-z]&#123;6,12&#125;$/; if(username.value.length == 0)&#123; nameErr.innerHTML = &quot;* 用户名不能为空 *&quot;; nameErr.className = &quot;err&quot;; return false; &#125; if (!pattern.test(username.value)) &#123; nameErr.innerHTML = &quot;* 以字母开头的6到12位的字符 *&quot;; nameErr.className = &quot;err&quot;; return false; &#125;else &#123; nameErr.innerHTML = &quot;OK&quot;; nameErr.className = &quot;ok&quot;; return true; &#125; &#125;//验证密码 function checkPassWord()&#123; var password = document.getElementById(&quot;passWord&quot;); var passwordErr = document.getElementById(&quot;passwordErr&quot;); var pattern = /^\w&#123;4,8&#125;$/; if(password.value.length == 0)&#123; passwordErr.innerHTML = &quot;密码不能为空&quot;; passwordErr.className = &quot;err&quot;; return false; &#125; if(!pattern.test(password.value))&#123; passwordErr.innerHTML = &quot;请输入4到8位的密码&quot;; passwordErr.className = &quot;err&quot;; return false; &#125;else&#123; passwordErr.innerHTML = &quot;OK&quot;; passwordErr.className = &quot;ok&quot;; return true; &#125; &#125;//验证密码确认 function checkConpassWord()&#123; var conpassword = document.getElementById(&quot;conPassword&quot;); var conpasswordErr = document.getElementById(&quot;conPasswordErr&quot;); var password = document.getElementById(&quot;passWord&quot;); if (conpassword.value.length == 0) &#123; conpasswordErr.innerHTML = &quot;密码不能为空&quot;; conpasswordErr.className = &quot;err&quot;; return false; &#125; if ((conpassword.value) != (password.value)|| conpassword.value.length == 0)&#123; conpasswordErr.innerHTML = &quot;与上面密码不一致&quot;; conpasswordErr.className = &quot;err&quot;; return false; &#125;else&#123; conpasswordErr.innerHTML = &quot;OK&quot;; conpasswordErr.className = &quot;ok&quot;; return true; &#125; &#125;//验证手机号 function checkNumber()&#123; var number = document.getElementById(&quot;number&quot;); var numberErr = document.getElementById(&quot;numberErr&quot;); var pattern = /^1[34578]\d&#123;9&#125;$/; if (number.value.length == 0) &#123; numberErr.innerHTML = &quot;请输入手机号码&quot;; numberErr.className = &quot;err&quot;; return false; &#125; if(!pattern.test(number.value))&#123; numberErr.innerHTML = &quot;请输入正确的手机号&quot;; numberErr.className = &quot;err&quot;; return false; &#125;else&#123; numberErr.innerHTML = &quot;OK&quot;; numberErr.className = &quot;ok&quot;; &#125; &#125;]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>-表单验证</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DOM操作]]></title>
    <url>%2F2018%2F09%2F16%2FDOM%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[1、获取节点元素1234567891011121314151617181920window.onload = function()&#123;document.getElementById(&apos;id&apos;); --使用ID获取document.getElementsByTagName(&apos;li&apos;)[]; --使用标签名获取////document.getElementSByTagName(&quot;gendar&quot;); --IE浏览器在没有定义name属性的时候 无法使用该方法。var cityNode = document.getElementById(&apos;city&apos;);var cityLiNodes = cityNode.getElementsByName(&apos;li&apos;); &#125;; &lt;p&gt;你喜欢哪个城市&lt;/p&gt; &lt;ul id = &quot;city&quot;&gt; &lt;li name=&quot;city&quot;&gt;成都&lt;/li&gt; &lt;li&gt;北京&lt;/li&gt; &lt;li&gt;上海&lt;/li&gt; &lt;/ul&gt; 2、读写属性节点 先获取节点 ，再读取指定属性值，再操作 1234var cityNode = document.getElementById(&apos;city&apos;);var cityLiNodes = cityNode.getElementsByName(&apos;li&apos;); alert(cityLiNodes.length);]]></content>
      <categories>
        <category>javascript DOM</category>
      </categories>
      <tags>
        <tag>-DOM操作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS3动画（360度旋转、旋转放大、放大、移动）]]></title>
    <url>%2F2018%2F09%2F16%2FCSS3%E5%8A%A8%E7%94%BB%EF%BC%88360%E5%BA%A6%E6%97%8B%E8%BD%AC%E3%80%81%E6%97%8B%E8%BD%AC%E6%94%BE%E5%A4%A7%E3%80%81%E6%94%BE%E5%A4%A7%E3%80%81%E7%A7%BB%E5%8A%A8%EF%BC%89%2F</url>
    <content type="text"><![CDATA[CSS3 动画 360度旋转、旋转放大、放大、移动 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; div&#123; width:120px; height:120px; line-height:120px; margin: 20px; background-color: #5cb85c; float: left; font-size: 12px; text-align: center; color:orangered; &#125; /*效果一：360°旋转 修改rotate(旋转度数)*/ .img1 &#123; transition: All 0.4s ease-in-out; -webkit-transition: All 0.4s ease-in-out; -moz-transition: All 0.4s ease-in-out; -o-transition: All 0.4s ease-in-out; &#125; .img1:hover &#123; transform: rotate(360deg); -webkit-transform: rotate(360deg); -moz-transform: rotate(360deg); -o-transform: rotate(360deg); -ms-transform: rotate(360deg); &#125; /*效果二：放大 修改scale(放大的值)*/ .img2 &#123; transition: All 0.4s ease-in-out; -webkit-transition: All 0.4s ease-in-out; -moz-transition: All 0.4s ease-in-out; -o-transition: All 0.4s ease-in-out; &#125; .img2:hover &#123; transform: scale(1.2); -webkit-transform: scale(1.2); -moz-transform: scale(1.2); -o-transform: scale(1.2); -ms-transform: scale(1.2); &#125; /*效果三：旋转放大 修改rotate(旋转度数) scale(放大值)*/ .img3 &#123; transition: All 0.4s ease-in-out; -webkit-transition: All 0.4s ease-in-out; -moz-transition: All 0.4s ease-in-out; -o-transition: All 0.4s ease-in-out; &#125; .img3:hover &#123; transform: rotate(360deg) scale(1.2); -webkit-transform: rotate(360deg) scale(1.2); -moz-transform: rotate(360deg) scale(1.2); -o-transform: rotate(360deg) scale(1.2); -ms-transform: rotate(360deg) scale(1.2); &#125; /*效果四：上下左右移动 修改translate(x轴,y轴)*/ .img4 &#123; transition: All 0.4s ease-in-out; -webkit-transition: All 0.4s ease-in-out; -moz-transition: All 0.4s ease-in-out; -o-transition: All 0.4s ease-in-out; &#125; .img4:hover &#123; transform: translate(0, -10px); -webkit-transform: translate(0, -10px); -moz-transform: translate(0, -10px); -o-transform: translate(0, -10px); -ms-transform: translate(0, -10px); &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=&quot;img1&quot;&gt;效果一：360°旋转 &lt;/div&gt;&lt;div class=&quot;img2&quot;&gt;效果二：放大&lt;/div&gt;&lt;div class=&quot;img3&quot;&gt;效果三：旋转放大&lt;/div&gt;&lt;div class=&quot;img4&quot;&gt;效果四：上下左右移动 &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>-CSS3动画</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建自己的个人博客]]></title>
    <url>%2F2018%2F09%2F13%2F%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[搭建个人博客方法总结~~~简洁 ####（1）准备工作 安装Node.js和git，直接百度下载，傻瓜式安装一键点击下一步，在安装node.js时要使用自动配置环境变量，这样就不用手动配置了，还需要注册一个github账号。 ####（2）博客搭建 新建myHexoBlog文件夹（名字自己取吧），文件夹中右键Git Bash Here输入 npm install hexo 回车，会出现node_modules的文件夹。 依次执行hexo命令：hexo init –初始化hexo环境npm install –安装npm依赖包hexo generate –生成静态页面hexo server –生成本地服务 浏览器输入http://localhost:4000，出现下面界面说明博客安装完成。 ####（3）使用github将博客发布到网络上。 创建远程仓库：new repository 注意：repository name要与自己github的名字一样。连接github仓库到本地仓库：文件夹中找到——config.yml文件，找到deploy修改成deploy：type: gitrepo： git@github.com:yourname.github.io.gitbranch: master GitBash依次执行npm install hexo-deployer-git –savehexo deploy博客发布到网络完成。 发布第一篇博客：hexo new 这是我的第一篇博客…………………… hexo还有很多操作例如next装修界面等等等，有兴趣的可以观看他的视频哦，简洁明了。B站UP主 Mackxin]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
