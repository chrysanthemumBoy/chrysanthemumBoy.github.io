<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[表单验证（自己做一个表单验证）]]></title>
    <url>%2F2018%2F09%2F18%2F%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%EF%BC%88%E8%87%AA%E5%B7%B1%E5%81%9A%E4%B8%80%E4%B8%AA%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%EF%BC%89%2F</url>
    <content type="text"><![CDATA[大多数网站都要应用到表单的验证，自己多动手操作，熟练JS语法和正式法则。 首先html建立一个简单的表单，css加一些样式。 代码如下:1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556html:&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;表单验证&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/index.css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;css/normalize.css&quot;&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/index.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;p&gt;新用户注册&lt;/p&gt; &lt;h3&gt;基本信息&lt;/h3&gt; &lt;hr /&gt; &lt;div class=&quot;content&quot;&gt; &lt;form action=&quot;#&quot; onsubmit=&quot;return checkForm()&quot;&gt; &lt;div class=&quot;formGroup&quot;&gt; &lt;label for=&quot;ueserName&quot;&gt;用户名：&lt;/label&gt; &lt;input type=&quot;text&quot; id=&quot;userName&quot; onblur=&quot;checkUserName()&quot; oninput=&quot;checkUserName()&quot; &gt; &lt;span class=&quot;default&quot; id=&quot;nameErr&quot;&gt;请输入至少三位的用户名&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;formGroup&quot;&gt; &lt;label for=&quot;passWord&quot;&gt;密码：&lt;/label&gt; &lt;input type=&quot;password&quot; id=&quot;passWord&quot; onblur=&quot;checkPassWord()&quot; oninput=&quot;checkPassWord()&quot; &gt; &lt;span class=&quot;default&quot; id=&quot;passwordErr&quot;&gt;请输入4到8位的密码&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;formGroup&quot;&gt; &lt;label for=&quot;conPassWord&quot;&gt;确认密码：&lt;/label&gt; &lt;input type=&quot;password&quot; id=&quot;conPassword&quot; onblur=&quot;checkConpassWord()&quot; oninput=&quot;checkConpassWord()&quot; /&gt; &lt;span class=&quot;default&quot; id=&quot;conPasswordErr&quot;&gt;请再输入一遍密码&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;formGroup&quot;&gt; &lt;label for=&quot;number&quot;&gt;手机号码：&lt;/label&gt; &lt;input type=&quot;text&quot; id=&quot;number&quot; onblur=&quot;checkNumber()&quot; oninput=&quot;checkNumber()&quot; /&gt; &lt;span class=&quot;default&quot; id=&quot;numberErr&quot;&gt;请输入11位手机号码&lt;/span&gt; &lt;/div&gt; &lt;div&gt; &lt;button type=&quot;submit&quot; class=&quot;submit&quot;&gt;注册&lt;/button&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768css:.container &#123; width: 500px; height: 500px; border: 1px solid #807B7B; margin: 100px auto ; border-radius: 10px; background: #F6F3F3;&#125;.container p &#123; width: 450px; height: 25px; line-height: 25px; text-align: center; border-radius: 3px; border: 1px solid #807B7B; margin:10px auto 0; font-weight: bold;&#125;hr &#123; width: 90%;&#125;h3 &#123; font-size: 16px; padding-left: 22px;&#125;.content&#123; margin-top: 20px;&#125;.content label &#123; width: 100px; height: 32px; display: inline-block; text-align: right;&#125;.content span &#123; font-size: 12px;&#125;.content .submit &#123; background: #F3BD59; margin: 0 auto; width: 50px; height: 30px; border-radius: 2px; border: none; margin:20px 180px;&#125;.err &#123; color: red;&#125;.ok &#123; color: blue;&#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131js: function checkForm()&#123; var nametip = checkUserName(); var passwordtip = checkPassWord(); var conpasswordtip = checkConpassWord(); var numbertip = checkNumber(); return nametip &amp;&amp; passwordtip &amp;&amp; conpasswordtip &amp;&amp; numbertip; &#125;//验证名字 function checkUserName()&#123; var username = document.getElementById(&quot;userName&quot;); var nameErr = document.getElementById(&quot;nameErr&quot;); var pattern = /^[a-zA-Z][0-9A-Za-z]&#123;6,12&#125;$/; if(username.value.length == 0)&#123; nameErr.innerHTML = &quot;* 用户名不能为空 *&quot;; nameErr.className = &quot;err&quot;; return false; &#125; if (!pattern.test(username.value)) &#123; nameErr.innerHTML = &quot;* 以字母开头的6到12位的字符 *&quot;; nameErr.className = &quot;err&quot;; return false; &#125;else &#123; nameErr.innerHTML = &quot;OK&quot;; nameErr.className = &quot;ok&quot;; return true; &#125; &#125;//验证密码 function checkPassWord()&#123; var password = document.getElementById(&quot;passWord&quot;); var passwordErr = document.getElementById(&quot;passwordErr&quot;); var pattern = /^\w&#123;4,8&#125;$/; if(password.value.length == 0)&#123; passwordErr.innerHTML = &quot;密码不能为空&quot;; passwordErr.className = &quot;err&quot;; return false; &#125; if(!pattern.test(password.value))&#123; passwordErr.innerHTML = &quot;请输入4到8位的密码&quot;; passwordErr.className = &quot;err&quot;; return false; &#125;else&#123; passwordErr.innerHTML = &quot;OK&quot;; passwordErr.className = &quot;ok&quot;; return true; &#125; &#125;//验证密码确认 function checkConpassWord()&#123; var conpassword = document.getElementById(&quot;conPassword&quot;); var conpasswordErr = document.getElementById(&quot;conPasswordErr&quot;); var password = document.getElementById(&quot;passWord&quot;); if (conpassword.value.length == 0) &#123; conpasswordErr.innerHTML = &quot;密码不能为空&quot;; conpasswordErr.className = &quot;err&quot;; return false; &#125; if ((conpassword.value) != (password.value)|| conpassword.value.length == 0)&#123; conpasswordErr.innerHTML = &quot;与上面密码不一致&quot;; conpasswordErr.className = &quot;err&quot;; return false; &#125;else&#123; conpasswordErr.innerHTML = &quot;OK&quot;; conpasswordErr.className = &quot;ok&quot;; return true; &#125; &#125;//验证手机号 function checkNumber()&#123; var number = document.getElementById(&quot;number&quot;); var numberErr = document.getElementById(&quot;numberErr&quot;); var pattern = /^1[34578]\d&#123;9&#125;$/; if (number.value.length == 0) &#123; numberErr.innerHTML = &quot;请输入手机号码&quot;; numberErr.className = &quot;err&quot;; return false; &#125; if(!pattern.test(number.value))&#123; numberErr.innerHTML = &quot;请输入正确的手机号&quot;; numberErr.className = &quot;err&quot;; return false; &#125;else&#123; numberErr.innerHTML = &quot;OK&quot;; numberErr.className = &quot;ok&quot;; &#125; &#125;]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>-表单验证</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DOM操作]]></title>
    <url>%2F2018%2F09%2F16%2FDOM%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[1、获取节点元素1234567891011121314151617181920window.onload = function()&#123;document.getElementById(&apos;id&apos;); --使用ID获取document.getElementsByTagName(&apos;li&apos;)[]; --使用标签名获取////document.getElementSByTagName(&quot;gendar&quot;); --IE浏览器在没有定义name属性的时候 无法使用该方法。var cityNode = document.getElementById(&apos;city&apos;);var cityLiNodes = cityNode.getElementsByName(&apos;li&apos;); &#125;; &lt;p&gt;你喜欢哪个城市&lt;/p&gt; &lt;ul id = &quot;city&quot;&gt; &lt;li name=&quot;city&quot;&gt;成都&lt;/li&gt; &lt;li&gt;北京&lt;/li&gt; &lt;li&gt;上海&lt;/li&gt; &lt;/ul&gt; 2、读写属性节点 先获取节点 ，再读取指定属性值，再操作 1234var cityNode = document.getElementById(&apos;city&apos;);var cityLiNodes = cityNode.getElementsByName(&apos;li&apos;); alert(cityLiNodes.length);]]></content>
      <categories>
        <category>javascript DOM</category>
      </categories>
      <tags>
        <tag>-DOM操作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS3动画（360度旋转、旋转放大、放大、移动）]]></title>
    <url>%2F2018%2F09%2F16%2FCSS3%E5%8A%A8%E7%94%BB%EF%BC%88360%E5%BA%A6%E6%97%8B%E8%BD%AC%E3%80%81%E6%97%8B%E8%BD%AC%E6%94%BE%E5%A4%A7%E3%80%81%E6%94%BE%E5%A4%A7%E3%80%81%E7%A7%BB%E5%8A%A8%EF%BC%89%2F</url>
    <content type="text"><![CDATA[CSS3 动画 360度旋转、旋转放大、放大、移动 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Title&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; div&#123; width:120px; height:120px; line-height:120px; margin: 20px; background-color: #5cb85c; float: left; font-size: 12px; text-align: center; color:orangered; &#125; /*效果一：360°旋转 修改rotate(旋转度数)*/ .img1 &#123; transition: All 0.4s ease-in-out; -webkit-transition: All 0.4s ease-in-out; -moz-transition: All 0.4s ease-in-out; -o-transition: All 0.4s ease-in-out; &#125; .img1:hover &#123; transform: rotate(360deg); -webkit-transform: rotate(360deg); -moz-transform: rotate(360deg); -o-transform: rotate(360deg); -ms-transform: rotate(360deg); &#125; /*效果二：放大 修改scale(放大的值)*/ .img2 &#123; transition: All 0.4s ease-in-out; -webkit-transition: All 0.4s ease-in-out; -moz-transition: All 0.4s ease-in-out; -o-transition: All 0.4s ease-in-out; &#125; .img2:hover &#123; transform: scale(1.2); -webkit-transform: scale(1.2); -moz-transform: scale(1.2); -o-transform: scale(1.2); -ms-transform: scale(1.2); &#125; /*效果三：旋转放大 修改rotate(旋转度数) scale(放大值)*/ .img3 &#123; transition: All 0.4s ease-in-out; -webkit-transition: All 0.4s ease-in-out; -moz-transition: All 0.4s ease-in-out; -o-transition: All 0.4s ease-in-out; &#125; .img3:hover &#123; transform: rotate(360deg) scale(1.2); -webkit-transform: rotate(360deg) scale(1.2); -moz-transform: rotate(360deg) scale(1.2); -o-transform: rotate(360deg) scale(1.2); -ms-transform: rotate(360deg) scale(1.2); &#125; /*效果四：上下左右移动 修改translate(x轴,y轴)*/ .img4 &#123; transition: All 0.4s ease-in-out; -webkit-transition: All 0.4s ease-in-out; -moz-transition: All 0.4s ease-in-out; -o-transition: All 0.4s ease-in-out; &#125; .img4:hover &#123; transform: translate(0, -10px); -webkit-transform: translate(0, -10px); -moz-transform: translate(0, -10px); -o-transform: translate(0, -10px); -ms-transform: translate(0, -10px); &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=&quot;img1&quot;&gt;效果一：360°旋转 &lt;/div&gt;&lt;div class=&quot;img2&quot;&gt;效果二：放大&lt;/div&gt;&lt;div class=&quot;img3&quot;&gt;效果三：旋转放大&lt;/div&gt;&lt;div class=&quot;img4&quot;&gt;效果四：上下左右移动 &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>-CSS3动画</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建自己的个人博客]]></title>
    <url>%2F2018%2F09%2F13%2F%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[搭建个人博客方法总结~~~简洁 ####（1）准备工作 安装Node.js和git，直接百度下载，傻瓜式安装一键点击下一步，在安装node.js时要使用自动配置环境变量，这样就不用手动配置了，还需要注册一个github账号。 ####（2）博客搭建 新建myHexoBlog文件夹（名字自己取吧），文件夹中右键Git Bash Here输入 npm install hexo 回车，会出现node_modules的文件夹。 依次执行hexo命令：hexo init –初始化hexo环境npm install –安装npm依赖包hexo generate –生成静态页面hexo server –生成本地服务 浏览器输入http://localhost:4000，出现下面界面说明博客安装完成。 ####（3）使用github将博客发布到网络上。 创建远程仓库：new repository 注意：repository name要与自己github的名字一样。连接github仓库到本地仓库：文件夹中找到——config.yml文件，找到deploy修改成deploy：type: gitrepo： git@github.com:yourname.github.io.gitbranch: master GitBash依次执行npm install hexo-deployer-git –savehexo deploy博客发布到网络完成。 发布第一篇博客：hexo new 这是我的第一篇博客…………………… hexo还有很多操作例如next装修界面等等等，有兴趣的可以观看他的视频哦，简洁明了。B站UP主 Mackxin]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
